-- index
-- 테이블에 있는 데이터를 빠르게 검색하기 위한 용도 나온 데이터 베이스 객체
-- 테이블 하나 이상의 컬럼으로 인덱스를 만들 수 있음
-- 오라클에서는 기본적으로 테이블 기본키로 인덱스가 설정 되어 있음
SELECT * FROM USER_INDEXES; --모든 인덱스 정보 조회
--CREATE [UNIQUE] INDEX 인덱스명 ON 테이블명(컬럼1, 컬럼2....);
CREATE INDEX PERSON_IDX ON PERSON(PNAME);
--리빌딩 작업
--데이터를 추가 삭제 수정등의 작업을 하다보면 트리가 한쪽로 치우쳐지는 현상이 나기 때문
ALTER INDEX PERSON_IDX REBUILD;
--인덱스 삭제
DROP INDEX PERSON_IDX;

CREATE UNIQUE INDEX PERSON_IDX ON PERSON(PNAME);

SELECT * FROM PERSON;
--UNIQUE 속성 때문에 이름이 중복된 데이터를 넣을 수 없다.
INSERT INTO PERSON VALUES('0000','홍길동',20);

--CAR_SELL 테이블에 판매날짜에 인덱스 적용
CREATE INDEX CAR_SELL_IDX_SELL_DATE ON CAR_SELL(CAR_SELL_DATE);

--시퀸스
--자동으로 증가하는 순번을 반환하는 데이터베이스 객체
CREATE SEQUENCE NO_SEQ;

SELECT NO_SEQ.NEXTVAL FROM DUAL;
SELECT NO_SEQ.CURRVAL FROM DUAL;

CREATE SEQUENCE TEST_SEQ
INCREMENT BY 2
START WITH 4
MINVALUE 4
MAXVALUE 10
CYCLE --NOCYCLE
CACHE 2;

CREATE SEQUENCE TEST_SEQ
INCREMENT BY -1
START WITH 1
MINVALUE 1
MAXVALUE 10
CYCLE --NOCYCLE
CACHE 5 --NOCACHE;

DROP SEQUENCE TEST_SEQ;

SELECT TEST_SEQ.NEXTVAL FROM DUAL;
--시퀸스 목록
SELECT * FROM USER_SEQUENCES;

--제공되는 암호화 함수 
SELECT STANDARD_HASH('암호화할 데이터','SHA512'),
	LENGTH(STANDARD_HASH('암호화할 데이터','SHA512')) FROM DUAL;
SELECT STANDARD_HASH('123456','SHA512'),
	LENGTH(STANDARD_HASH('123456','SHA512')) FROM DUAL;


---------------------
CREATE TABLE BOARD_MEMBER (
	BOARD_MEMBER_ID	VARCHAR2(50)		NOT NULL,
	BOARD_MEMBER_NAME	VARCHAR2(50)		NULL,
	BOARD_MEMBER_PASSWD	CHAR(128)		NOT NULL,
	BOARD_MEMBER_NICK	VARCHAR2(50)		NULL
);

CREATE TABLE BOARD (
	BOARD_NO	NUMBER		NOT NULL,
	BOARD_MEMBER_ID	VARCHAR2(50)		NOT NULL,
	BOARD_TITLE	VARCHAR2(150)		NULL,
	BOARD_CONTENT	VARCHAR2(3000)		NULL,
	BOARD_COUNT	NUMBER	DEFAULT 0	NULL,
	BOARD_WRITE_DATE	DATE	DEFAULT SYSDATE	NULL
);

CREATE TABLE BOARD_CONTENT_LIKE (
	BOARD_MEMBER_ID	VARCHAR2(50)		NOT NULL,
	BOARD_NO	NUMBER		NOT NULL
);

CREATE TABLE BOARD_CONTENT_HATE (
	BOARD_MEMBER_ID	VARCHAR2(50)		NOT NULL,
	BOARD_NO	NUMBER		NOT NULL
);

CREATE TABLE BOARD_COMMENT (
	BOARD_COMMENT_NO	NUMBER		NOT NULL,
	BOARD_MEMBER_ID	VARCHAR2(50)		NOT NULL,
	BOARD_NO	NUMBER		NOT NULL,
	BOARD_COMMENT_CONTENT	VARCHAR2(1000)		NULL,
	BOARD_COMMENT_WRITE_DATE	DATE	DEFAULT SYSDATE	NULL
);

CREATE TABLE BOARD_COMMENT_LIKE (
	BOARD_MEMBER_ID	VARCHAR2(50)		NOT NULL,
	BOARD_COMMENT_NO	NUMBER		NOT NULL
);

CREATE TABLE BOARD_COMMENT_HATE (
	BOARD_MEMBER_ID	VARCHAR2(50)		NOT NULL,
	BOARD_COMMENT_NO	NUMBER		NOT NULL
);

CREATE TABLE BOARD_FILE (
	BOARD_FILE_NO	CHAR(10)		NOT NULL,
	BOARD_NO	NUMBER		NOT NULL,
	BOARD_FILE_URL	VARCHAR2(100)		NULL
);

--제약조건
--기본키, 외래키 적용
--회원 아이디 기본키
ALTER TABLE BOARD_MEMBER 
ADD CONSTRAINT PK_MEMBER_ID PRIMARY KEY(BOARD_MEMBER_ID);
--게시판 글번호 기본키
ALTER TABLE BOARD
ADD CONSTRAINT PK_BOARD_NO PRIMARY KEY(BOARD_NO);
--게시글 첨부파일 파일번호 기본키
ALTER TABLE BOARD_FILE
ADD CONSTRAINT PK_BOARD_FILE_NO PRIMARY KEY(BOARD_FILE_NO);
--댓글 번호 기본키
ALTER TABLE BOARD_COMMENT
ADD CONSTRAINT PK_BOARD_COMMENT_NO PRIMARY KEY(BOARD_COMMENT_NO);

--게시판 테이블에 회원 아이디를 외래키로 지정
ALTER TABLE BOARD ADD CONSTRAINT FK_BOARD_MEMBER_ID
FOREIGN KEY(BOARD_MEMBER_ID) REFERENCES BOARD_MEMBER(BOARD_MEMBER_ID)
ON DELETE CASCADE;

--댓글 테이블 회원 아이디, 게시판 글번호를 외래키로 지정
ALTER TABLE BOARD_COMMENT ADD CONSTRAINT FK_COMMENT_BOARD_MEMBER_ID
FOREIGN KEY(BOARD_MEMBER_ID) REFERENCES BOARD_MEMBER(BOARD_MEMBER_ID)
ON DELETE CASCADE;

ALTER TABLE BOARD_COMMENT ADD CONSTRAINT FK_COMMENT_BOARD_NO
FOREIGN KEY(BOARD_NO) REFERENCES BOARD(BOARD_NO) ON DELETE CASCADE;












