--조인
CREATE TABLE A(
	CODE CHAR(1),
	VAL NUMBER(1)
);
CREATE TABLE B(
	CODE CHAR(1),
	UNIT CHAR(1)
);
INSERT INTO A VALUES('A',1);
INSERT INTO A VALUES('B',2);
INSERT INTO A VALUES('C',3);
INSERT INTO A VALUES('D',4);

INSERT INTO B VALUES('A','+');
INSERT INTO B VALUES('B','-');
INSERT INTO B VALUES('C','*');
INSERT INTO B VALUES('F','/');

SELECT * FROM A;
SELECT * FROM B;

-- 동일 조인
SELECT A.CODE, A.VAL, B.CODE, B.UNIT
FROM A, B
WHERE A.CODE = B.CODE;

--INNER JOIN
SELECT A.CODE, A.VAL, B.CODE, B.UNIT
FROM A INNER JOIN B ON A.CODE = B.CODE;

--자연 조인(NATURAL JOIN)
SELECT * FROM A NATURAL JOIN B;

--교차 조인(CROSS JOIN)
SELECT * FROM A CROSS JOIN B;
SELECT * FROM A , B;

--외부 조인(OUTER JOIN)
--두 테이블을 조인시 한쪽 테이블에 일치하는 행이 없어도 데이터를 포함해서 결과를 반환
--왼쪽 외부 조인(LEFT OUTER JOIN), 오른쪽 외부 조인(RIGHT OUTER JOIN)
--LEFT OUTER JOIN
SELECT A.*, B.*
FROM A, B 
WHERE A.CODE = B.CODE(+);

SELECT A.*, B.*
FROM A LEFT OUTER JOIN B
ON A.CODE = B.CODE;

--RIGHT OUTER JOIN
SELECT A.*, B.*
FROM A, B 
WHERE A.CODE(+) = B.CODE;

SELECT A.*, B.*
FROM A RIGHT OUTER JOIN B
ON A.CODE = B.CODE;

--학과 테이블
CREATE TABLE MAJOR(
	MAJOR_NO CHAR(2) PRIMARY KEY,
	MAJOR_NAME VARCHAR2(30)
);

--학과명 뽑음
SELECT DISTINCT STD_MAJOR FROM STUDENT;

--학과번호 랜덤으로 뽑음
SELECT CHR(DBMS_RANDOM.VALUE(65,90)) 
		|| FLOOR(DBMS_RANDOM.VALUE() * 10)  FROM DUAL;

SELECT CHR(DBMS_RANDOM.VALUE(65,90)) 
	|| FLOOR(DBMS_RANDOM.VALUE() * 10), STD_MAJOR  
FROM (SELECT DISTINCT STD_MAJOR FROM STUDENT);

	
INSERT INTO MAJOR
SELECT CHR(DBMS_RANDOM.VALUE(65,90)) 
	|| FLOOR(DBMS_RANDOM.VALUE() * 10), STD_MAJOR  
FROM (SELECT DISTINCT STD_MAJOR FROM STUDENT);





